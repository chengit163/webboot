# 日志
logging:
  level:
    root: error
    com.cit: info
#
spring:
  # spring.datasource
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/webboot?useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
    # 初始化时建立物理连接的个数 (缺省值: 0)
    initialSize: 1
    # 最大连接池数量(缺省值: 8)
    maxActive: 10
    ### maxIdle: 已经不再使用，配置了也没效果 (缺省值: 8)
    # 最小连接池数量
    minIdle: 3
    # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
    maxWait: 60000
    # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。 (缺省值: false)
    poolPreparedStatements: true
    # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
    # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    # (缺省值: -1)
    maxPoolPreparedStatementPerConnectionSize: 20
    # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
    validationQuery: select 'x'
    # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
    # validationQueryTimeout:
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 (缺省值: true)
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 (缺省值: false)
    testOnReturn: false
    # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    # (缺省值: false)
    testWhileIdle: true
    # 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
    # 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    # (缺省值: 1分钟（1.0.14）)
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    ### numTestsPerEvictionRun: 不再使用，一个DruidDataSource只支持一个EvictionRun
    # 连接保持空闲而不被驱逐的最长时间 (缺省值: 30分钟（1.0.14）)
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    # 物理连接初始化的时候执行的sql
    # connectionInitSqls:
    # 当数据库抛出一些不可恢复的异常时，抛弃连接 ((缺省值: 根据dbType自动识别)
    # exceptionSorter:
    # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
    # 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
    filters: stat,wall,slf4j
    # 类型是List<com.alibaba.druid.filter.Filter>，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
    # proxyFilters:
  # spring.redis
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    # password:
    # 连接超时时间（毫秒）
    timeout: 10000
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 100
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0